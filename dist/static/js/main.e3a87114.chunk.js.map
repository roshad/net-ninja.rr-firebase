{"version":3,"sources":["navbar.js","pages/dashboard.js","pages/newProject.js","pages/signIn.js","pages/register.js","configFb.js","reducer.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","_this$props$auth","this","props","auth","isLoaded","isEmpty","react_default","a","createElement","className","class","react_router_dom","to","Out","In","firebase","username","Loading","React","Component","id","onClick","logout","compose","withFirebase","connect","state","profile","Dashboard","console","log","_this$props","not","pro","map","project","ProjectCard","NotCard","noti","title","content","user","type","moment","time","toDate","fromNow","firestore","ordered","notification","firestoreConnect","collection","limit","NewProject","form","handleChange","e","_this","setState","Object","objectSpread","defineProperty","target","value","handleSubmit","preventDefault","add","createTime","Date","then","alert","window","location","href","onSubmit","htmlFor","onChange","withFirestore","_ref","SignIn","credentials","login","Register","_this$state$form","password","email","createUser","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","combineReducers","firebaseReducer","firestoreReducer","rest","objectWithoutProperties","react_router","store","reduxFirestore","createStore","createStoreWithFirebase","reducer","applyMiddleware","thunk","withExtraArgument","getFirestore","rrfProps","config","useFirestoreForProfile","userProfile","dispatch","attachAuthIsReady","createFirestoreInstance","App","es","react_redux_firebase_es","navbar","src_PrivateRoute","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3a87114.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { compose } from \"redux\";\r\nimport { withFirebase } from \"react-redux-firebase\";\r\n\r\nimport moment from 'moment'\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        const { isLoaded, isEmpty } = this.props.auth;\r\n        return (\r\n            <nav className=\"blue\">\r\n                <div class=\"navbar-wrapper \">\r\n                    <div class=\"container\">\r\n                        <Link to=\"\" class=\"brand-logo\">\r\n                            PMS\r\n                        </Link>\r\n\r\n                        {!isLoaded ? (\r\n                            <Loading/>\r\n                        ) : isEmpty ? (\r\n                            <Out />\r\n                        ) : (\r\n                            <In firebase={this.props.firebase} username={this.props.username} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nfunction In(props) {\r\n    return (\r\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <Link to=\"/Dashboard\">Dashboard</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/newProject\">New Project</Link>\r\n            </li>\r\n\r\n            <li>\r\n                <Link onClick={() => props.firebase.logout()}>Log Out</Link>\r\n            </li>\r\n            <li>\r\n                <Link className=\"btn-floating\">{props.username}</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction Out(props) {\r\n    return (\r\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <Link to=\"/in\">Log In</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n            <li>\r\n                <div >Loading</div>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst stp = (state) => ({ username:state.firebase.profile.username,auth:state.firebase.auth });\r\n\r\nexport default compose(\r\n    withFirebase,\r\n    connect(\r\n        stp,\r\n        null\r\n    )\r\n)(Navbar);\r\n","import React from \"react\";\r\n\r\nimport { firestoreConnect, withFirestore } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport moment from 'moment'\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        console.log(this);\r\n\r\n        let { not, pro } = this.props;\r\n        return (\r\n            <div className=\"row container\">\r\n                <div className=\"col s6\">\r\n                    {!pro ? (\r\n                        <div>loading</div>\r\n                    ) : (\r\n                        pro.map(project => <ProjectCard {...project} />)\r\n                    )}\r\n                </div>\r\n                <div className=\"col s6\">\r\n                    {!not ? <div>loading</div> : <NotCard noti={not} />}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ProjectCard(props) {\r\n    return (\r\n        <div class=\"card blue lighten-2\">\r\n            <div class=\"card-content \">\r\n                <span class=\"card-title\">{props.title}</span>\r\n                <p>{props.content}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NotCard(props) {\r\n    return (\r\n        <div class=\"card \">\r\n            <div class=\"card-content \">\r\n                {props.noti.map(not => (\r\n                    <div>\r\n                        {not.user + \" \"}\r\n                        <span className=\"pink-text\">{not.type + \" \"}</span>\r\n                        {not.title}\r\n                        <div className=\"grey-text right-align\">{moment(not.time.toDate()).fromNow()}</div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst stP = state => {\r\n    return {\r\n        pro: state.firestore.ordered.project,\r\n        not: state.firestore.ordered.notification\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(stP),\r\n    firestoreConnect([{collection:\"notification\",limit:10}, {collection:\"project\",limit:5}])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { withFirestore } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nclass NewProject extends React.Component {\r\n    state = { form: {} };\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: { ...this.state.form, [e.target.id]: e.target.value }\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.firestore.collection(\"project\").add({\r\n            ...this.state.form,\r\n            createTime: new Date(),\r\n            user: this.props.username\r\n        }).then(()=>{alert('success');window.location.href=''})\r\n    };\r\n    render() {        \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">title</label>\r\n                        <input\r\n                            id=\"title\"\r\n                            type=\"text\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">content</label>\r\n                        <textarea\r\n                            id=\"content\"\r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button className=\"waves-effect waves-light btn\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withFirestore,\r\n    connect(({ firebase: { profile: { username } } }) => ({ username }))\r\n)(NewProject);\r\n","import React from \"react\";\r\n\r\nimport { compose } from \"redux\";\r\nimport { withFirebase } from \"react-redux-firebase\";\r\n\r\nclass SignIn extends React.Component {\r\n    state = { credentials: {} };\r\n    handleChange = e => {\r\n        this.setState({\r\n            credentials: {\r\n                ...this.state.credentials,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.props.firebase);\r\n        \r\n        this.props.firebase\r\n            .login(this.state.credentials)        \r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form className='white' onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label>email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label>password</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button className=\"waves-effect waves-light btn\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    withFirebase,    \r\n)(SignIn);\r\n","import React from \"react\";\r\n\r\nimport { compose } from \"redux\";\r\nimport { withFirebase } from \"react-redux-firebase\";\r\n\r\nclass Register extends React.Component {\r\n    state = { form: {} };\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.id]: e.target.value\r\n            }\r\n        });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        \r\n        const {password,username,email} = this.state.form \r\n        this.props.firebase\r\n            .createUser({password,email},{username,email})\r\n            .then(()=>window.location.href = 'Dashboard')        \r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <label>email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label>password</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label>username</label>\r\n                        <input\r\n                            id=\"username\"\r\n                            type='text'                            \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <button className=\"waves-effect waves-light btn\">\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    withFirebase,    \r\n)(Register);\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n const fbConfig = {\r\n    apiKey: \"AIzaSyCIPG_xmq2Tm-vwu5y2YjcBUbC-rXHxgxI\",\r\n    authDomain: \"nn-cms-c7400.firebaseapp.com\",\r\n    databaseURL: \"https://nn-cms-c7400.firebaseio.com\",\r\n    projectId: \"nn-cms-c7400\",\r\n    storageBucket: \"nn-cms-c7400.appspot.com\",\r\n    messagingSenderId: \"928895076809\",\r\n    appId: \"1:928895076809:web:8e6f61d8a9911bc1\"\r\n};\r\n\r\nfirebase.initializeApp(fbConfig)\r\nfirebase.firestore()\r\n\r\nexport {firebase}","import { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\n\r\n// Add firebase to reducers\r\nexport default combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer // <- needed if using firestore\r\n})","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ isEmpty, ...rest }) => {\r\n    return isEmpty ? <Redirect to=\"\" /> : <Route {...rest} />;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isEmpty: state.firebase.auth.isEmpty\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\n\r\nimport Navbar from \"./navbar\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport NewProject from \"./pages/newProject\";\r\nimport SignIn from \"./pages/signIn\";\r\nimport Register from \"./pages/register\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\r\n\r\nimport {\r\n    createFirestoreInstance,\r\n    getFirestore,\r\n    reduxFirestore\r\n} from \"redux-firestore\";\r\n\r\nimport { firebase } from \"./configFb\";\r\n\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nconst createStoreWithFirebase = compose(reduxFirestore(firebase))(createStore);\r\nconst store = createStoreWithFirebase(\r\n    reducer,\r\n    applyMiddleware(thunk.withExtraArgument({ getFirestore }))\r\n);\r\n\r\nconst rrfConfig = {\r\n    useFirestoreForProfile: true,\r\n    userProfile: \"profile\"\r\n};\r\n\r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    attachAuthIsReady: true,\r\n    createFirestoreInstance // <- needed if using firestore\r\n};\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Navbar />\r\n                    </div>\r\n                    <PrivateRoute path=\"/newProject\" component={NewProject} />\r\n                    <PrivateRoute path=\"/Dashboard\" component={Dashboard} />\r\n                    <Route path=\"/in\" component={SignIn} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                </Router>\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}